name: Draft Automated Posts

on:
  workflow_dispatch:
    inputs:
      hours:
        description: "How many past hours to consider"
        required: false
        default: "6"
      max_posts:
        description: "Maximum number of drafts to create"
        required: false
        default: "3"
      dry_run:
        description: "Run without creating drafts (log only)"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

permissions:
  contents: write          # needed to push a branch
  pull-requests: write     # needed to open/update the PR

env:
  PYTHONUNBUFFERED: "1"

jobs:
  draft:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Sanity
        shell: bash
        run: |
          set -e
          # Verify expected files exist
          test -f config.yaml              || { echo "Missing config.yaml" && exit 1; }
          test -f scripts/auto_news.py     || { echo "Missing scripts/auto_news.py" && exit 1; }

          # Prepare folders/files used by the script
          mkdir -p state drafts
          [[ -f state/seen.json ]] || echo "[]" > state/seen.json

          # Export inputs as env for later steps
          echo "HOURS=${{ github.event.inputs.hours || '6' }}"       >> $GITHUB_ENV
          echo "MAX_POSTS=${{ github.event.inputs.max_posts || '3' }}" >> $GITHUB_ENV
          echo "DRY=${{ github.event.inputs.dry_run || 'false' }}"     >> $GITHUB_ENV

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download NLTK data
        shell: bash
        run: |
          python - <<'PY'
          import nltk
          # Ensure required packages are present (quiet, non-interactive)
          for pkg in ["punkt", "punkt_tab", "stopwords"]:
              try:
                  nltk.data.find(
                      {"punkt":"tokenizers/punkt",
                       "punkt_tab":"tokenizers/punkt_tab/english",
                       "stopwords":"corpora/stopwords"}[pkg]
                  )
              except LookupError:
                  nltk.download(pkg, quiet=True)
          print("NLTK data ready.")
          PY

      - name: Generate draft posts
        shell: bash
        run: |
          set -e
          echo "Generating drafts for last ${HOURS}h (max ${MAX_POSTS})"
          if [[ "${DRY}" == "true" ]]; then
            python scripts/auto_news.py --hours "${HOURS}" --max-posts "${MAX_POSTS}" --dry-run
          else
            python scripts/auto_news.py --hours "${HOURS}" --max-posts "${MAX_POSTS}"
          fi

      - name: Create PR if changes
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: add automated news drafts"
          title: "Automated drafts â€“ $(date -u +'%Y-%m-%d %H:%M UTC')"
          body: |
            This PR contains newly generated draft posts and updated state.
            - Hours: `${{ env.HOURS }}`
            - Max posts: `${{ env.MAX_POSTS }}`
            - Dry run: `${{ env.DRY }}`
          branch: bot/auto-drafts
          delete-branch: true
          add-paths: |
            drafts/**
            state/seen.json
